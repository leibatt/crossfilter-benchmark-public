[
    {
        "origin": [
            67,
            20
        ],
        "container": "distance",
        "name": "DISTANCE",
        "timestamp": 1539612183524,
        "height": 0,
        "width": 350,
        "offsetLeft": 452,
        "offsetTop": 261,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": 0,
                        "step": 200,
                        "stop": 4000
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabbÃ¥er:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        0,
                        4000
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Distance in Miles",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], 'd') + ',' + format(brush[reverseBrush ? 0 : 1], 'd') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    },
    {
        "origin": [
            67,
            20
        ],
        "container": "arrival",
        "name": "ARR_TIME",
        "timestamp": 1539612183528,
        "height": 0,
        "width": 350,
        "offsetLeft": 903,
        "offsetTop": 261,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": 0,
                        "step": 1,
                        "stop": 24
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabber:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        0,
                        24
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Arrival Time",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], '.1f') + ',' + format(brush[reverseBrush ? 0 : 1], '.1f') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    },
    {
        "origin": [
            67,
            20
        ],
        "container": "departure",
        "name": "DEP_TIME",
        "timestamp": 1539612183532,
        "height": 0,
        "width": 350,
        "offsetLeft": 8,
        "offsetTop": 483,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": 0,
                        "step": 1,
                        "stop": 24
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabber:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        0,
                        24
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Departure Time",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], '.1f') + ',' + format(brush[reverseBrush ? 0 : 1], '.1f') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    },
    {
        "origin": [
            67,
            20
        ],
        "container": "dep_delay",
        "name": "DEP_DELAY",
        "timestamp": 1539612183536,
        "height": 0,
        "width": 350,
        "offsetLeft": 452,
        "offsetTop": 483,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": -20,
                        "step": 5,
                        "stop": 60
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabber:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        -20,
                        60
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Departure Delay in Minutes",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], '.1f') + ',' + format(brush[reverseBrush ? 0 : 1], '.1f') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    },
    {
        "origin": [
            67,
            20
        ],
        "container": "arr_delay",
        "name": "ARR_DELAY",
        "timestamp": 1539612183539,
        "height": 0,
        "width": 350,
        "offsetLeft": 903,
        "offsetTop": 483,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": -20,
                        "step": 5,
                        "stop": 60
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabber:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        -20,
                        60
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Arrival Delay in Minutes",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], '.1f') + ',' + format(brush[reverseBrush ? 0 : 1], '.1f') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    },
    {
        "origin": [
            67,
            20
        ],
        "container": "airtime",
        "name": "AIR_TIME",
        "timestamp": 1539612183542,
        "height": 0,
        "width": 350,
        "offsetLeft": 8,
        "offsetTop": 705,
        "spec": {
            "signals": [
                {
                    "name": "histHeight",
                    "value": 160
                },
                {
                    "name": "pending",
                    "value": false
                },
                {
                    "name": "approximate",
                    "value": false
                },
                {
                    "name": "bin",
                    "value": {
                        "start": 0,
                        "step": 20,
                        "stop": 500
                    }
                },
                {
                    "name": "pixels",
                    "value": 1
                },
                {
                    "name": "step",
                    "update": "(bin.stop - bin.start) / pixels"
                },
                {
                    "on": [
                        {
                            "events": "@toggleShowBase:click!, @toggleShowBase:touchstart!",
                            "update": "!showBase"
                        }
                    ],
                    "name": "showBase",
                    "value": true
                },
                {
                    "on": [
                        {
                            "events": "mouseup, touchend",
                            "update": "span(brush) ? brush : 0"
                        },
                        {
                            "events": "@chart:dblclick!, @brush:dblclick!, @left_grabber:dblclick!, @left:dblclick!, @right_grabber:dblclick!, @right:dblclick!, @reset:click!, @reset:touchstart!",
                            "update": "0"
                        },
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "clampRange(panLinear(anchor, pan / span(anchor)), invert('x', 0), invert('x', width))"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!, [@chart:touchstart, window:touchend] > window:touchmove",
                            "update": "[down, clamp(snapped, invert('x', 0), invert('x', width))]"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove!, [@left_grabber:mousedown, window:mouseup] > window:mousemove!,[@left:touchstart, window:touchend] > window:touchmove, [@left_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[clamp(snapped, invert('x', 0), invert('x', width)), scale('snap', brush[1])]"
                        },
                        {
                            "events": "[@right:mousedown, window:mouseup] > window:mousemove!, [@right_grabber:mousedown, window:mouseup] > window:mousemove!,[@right:touchstart, window:touchend] > window:touchmove, [@right_grabber:touchstart, window:touchend] > window:touchmove",
                            "update": "[scale('snap', brush[0]), clamp(snapped, invert('x', 0), invert('x', width))]"
                        }
                    ],
                    "name": "brush",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "window:mousemove, window:touchstart, window:touchend, window:touchmove",
                            "update": "scale('snap', invert('x', x()))"
                        }
                    ],
                    "name": "snapped",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown, @chart:touchstart, @brush:mousedown, @brush:touchstart",
                            "update": "snapped"
                        }
                    ],
                    "name": "down",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "@brush:mousedown, @brush:touchstart",
                            "update": "[scale('snap', brush[0]), scale('snap', brush[1])]"
                        }
                    ],
                    "name": "anchor",
                    "value": 0
                },
                {
                    "on": [
                        {
                            "events": "[@brush:mousedown, window:mouseup] > window:mousemove!, [@brush:touchstart, window:touchend] > window:touchmove",
                            "update": "down - snapped"
                        }
                    ],
                    "name": "pan",
                    "value": 0
                },
                {
                    "name": "binBrush",
                    "update": "span(brush) ? [(brush[0] - bin.start) / step, (brush[1] - bin.start) / step] : 0"
                },
                {
                    "name": "pixelBrush",
                    "update": "span(brush) ? [scale('x', brush[0]), scale('x', brush[1])] : 0"
                },
                {
                    "name": "reverseBrush",
                    "update": "brush[0] > brush[1]"
                },
                {
                    "on": [
                        {
                            "events": {
                                "signal": "pan"
                            },
                            "update": "'move'"
                        },
                        {
                            "events": "[@left:mousedown, window:mouseup] > window:mousemove, [@left_grabber:mousedown, window:mouseup] > window:mousemove, [@right:mousedown, window:mouseup] > window:mousemove, [@right_grabber:mousedown, window:mouseup] > window:mousemove",
                            "update": "'ew-resize'"
                        },
                        {
                            "events": "[@chart:mousedown, window:mouseup] > window:mousemove!",
                            "update": "'crosshair'"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "'default'"
                        }
                    ],
                    "name": "cursor",
                    "value": "default"
                },
                {
                    "on": [],
                    "name": "domain",
                    "value": [
                        0,
                        500
                    ]
                },
                {
                    "on": [
                        {
                            "events": "@chart:mousedown",
                            "update": "1"
                        },
                        {
                            "events": "window:mouseup",
                            "update": "0"
                        }
                    ],
                    "name": "brushMouse",
                    "value": 0
                }
            ],
            "autosize": "pad",
            "layout": {
                "padding": {
                    "row": 10
                },
                "align": "each",
                "bounds": "full",
                "columns": 1
            },
            "title": {
                "text": "Airtime in Minutes",
                "frame": "group",
                "fontSize": 14,
                "anchor": "start",
                "offset": -12
            },
            "config": {
                "axisY": {
                    "minExtent": 50
                }
            },
            "scales": [
                {
                    "domain": {
                        "fields": [
                            {
                                "field": "value",
                                "data": "base"
                            },
                            {
                                "field": "value",
                                "data": "table"
                            }
                        ]
                    },
                    "name": "y",
                    "zero": true,
                    "range": [
                        {
                            "signal": "histHeight"
                        },
                        0
                    ],
                    "type": "linear",
                    "nice": true
                },
                {
                    "range": "width",
                    "domain": {
                        "signal": "domain"
                    },
                    "type": "linear",
                    "name": "x",
                    "zero": false
                },
                {
                    "range": {
                        "signal": "repeatInvisible(sequence(bin.start, bin.stop + step, step), invert('x', 0), invert('x', width))"
                    },
                    "domain": {
                        "signal": "sequence(bin.start + step / 2, bin.stop, step)"
                    },
                    "type": "threshold",
                    "name": "snap"
                }
            ],
            "padding": 5,
            "width": 350,
            "marks": [
                {
                    "encode": {
                        "enter": {
                            "width": {
                                "signal": "width"
                            },
                            "height": {
                                "signal": "histHeight"
                            }
                        }
                    },
                    "axes": [
                        {
                            "scale": "y",
                            "title": "Count",
                            "tickCount": {
                                "signal": "ceil(histHeight/40)"
                            },
                            "grid": true,
                            "labelOverlap": true,
                            "orient": "left"
                        },
                        {
                            "scale": "x",
                            "values": {
                                "signal": "sequence(bin.start, bin.stop + bin.step, bin.step)"
                            },
                            "orient": "bottom",
                            "tickCount": {
                                "signal": "ceil(width/20)"
                            },
                            "labelOverlap": true
                        }
                    ],
                    "type": "group",
                    "name": "main",
                    "marks": [
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? 'Reset Brush' : ''"
                                    }
                                },
                                "enter": {
                                    "align": {
                                        "value": "right"
                                    },
                                    "cursor": {
                                        "value": "pointer"
                                    },
                                    "fontWeight": {
                                        "value": "bold"
                                    },
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "black"
                                    }
                                }
                            },
                            "type": "text",
                            "name": "reset"
                        },
                        {
                            "encode": {
                                "update": {
                                    "text": {
                                        "signal": "span(brush) ? '[' + format(brush[reverseBrush ? 1 : 0], 'd') + ',' + format(brush[reverseBrush ? 0 : 1], 'd') + ']' : ''"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": -8
                                    },
                                    "x": {
                                        "signal": "width",
                                        "offset": -80
                                    },
                                    "align": {
                                        "value": "right"
                                    },
                                    "fill": {
                                        "value": "#666"
                                    }
                                }
                            },
                            "type": "text"
                        },
                        {
                            "encode": {
                                "update": {
                                    "clip": {
                                        "signal": "!span(brush)"
                                    }
                                },
                                "enter": {
                                    "cursor": {
                                        "value": "crosshair"
                                    },
                                    "width": {
                                        "signal": "width"
                                    },
                                    "fill": {
                                        "value": "transparent"
                                    },
                                    "height": {
                                        "field": {
                                            "group": "height"
                                        }
                                    }
                                }
                            },
                            "type": "group",
                            "name": "chart",
                            "marks": [
                                {
                                    "encode": {
                                        "update": {
                                            "x2": {
                                                "signal": "brush[1]",
                                                "scale": "x"
                                            },
                                            "x": {
                                                "signal": "brush[0]",
                                                "scale": "x"
                                            }
                                        },
                                        "enter": {
                                            "y": {
                                                "value": 0
                                            },
                                            "opacity": {
                                                "value": 0.05
                                            },
                                            "fill": {
                                                "value": "#000"
                                            },
                                            "cursor": {
                                                "value": "move"
                                            },
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "rect",
                                    "name": "brush"
                                },
                                {
                                    "type": "group",
                                    "clip": true,
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "opacity": {
                                                        "value": 0.07
                                                    },
                                                    "fill": {
                                                        "value": "#000"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "base"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        },
                                        {
                                            "encode": {
                                                "update": {
                                                    "opacity": {
                                                        "signal": "approximate ? 0.7 : 1"
                                                    },
                                                    "x": {
                                                        "field": "key",
                                                        "scale": "x",
                                                        "offset": 1
                                                    },
                                                    "x2": {
                                                        "signal": "datum.key + bin.step",
                                                        "scale": "x"
                                                    },
                                                    "y2": {
                                                        "scale": "y",
                                                        "value": 0
                                                    },
                                                    "y": {
                                                        "field": "value",
                                                        "scale": "y"
                                                    }
                                                },
                                                "enter": {
                                                    "fill": {
                                                        "value": "#4c78a8"
                                                    }
                                                }
                                            },
                                            "from": {
                                                "data": "table"
                                            },
                                            "type": "rect",
                                            "interactive": false
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[0]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "!reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "left_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": 0
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "left"
                                        }
                                    ]
                                },
                                {
                                    "encode": {
                                        "update": {
                                            "x": {
                                                "signal": "brush ? scale('x', brush[1]) : -10"
                                            }
                                        },
                                        "enter": {
                                            "height": {
                                                "field": {
                                                    "group": "height"
                                                }
                                            }
                                        }
                                    },
                                    "type": "group",
                                    "marks": [
                                        {
                                            "encode": {
                                                "update": {
                                                    "path": {
                                                        "signal": "reverseBrush ? 'M-0.5,33.333333333333336A6,6 0 0 0 -6.5,39.333333333333336V60.66666666666667A6,6 0 0 0 -0.5,66.66666666666667ZM-2.5,41.333333333333336V58.66666666666667M-4.5,41.333333333333336V58.66666666666667' : 'M0.5,33.333333333333336A6,6 0 0 1 6.5,39.333333333333336V60.66666666666667A6,6 0 0 1 0.5,66.66666666666667ZM2.5,41.333333333333336V58.66666666666667M4.5,41.333333333333336V58.66666666666667'"
                                                    }
                                                },
                                                "enter": {
                                                    "y": {
                                                        "field": {
                                                            "group": "height"
                                                        },
                                                        "mult": 0.5,
                                                        "offset": -50
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "stroke": {
                                                        "value": "#666"
                                                    },
                                                    "fill": {
                                                        "value": "#eee"
                                                    }
                                                }
                                            },
                                            "type": "path",
                                            "name": "right_grabber"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "width": {
                                                        "value": 1
                                                    },
                                                    "fill": {
                                                        "value": "firebrick"
                                                    },
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "rect"
                                        },
                                        {
                                            "encode": {
                                                "enter": {
                                                    "height": {
                                                        "field": {
                                                            "group": "height"
                                                        }
                                                    },
                                                    "cursor": {
                                                        "value": "ew-resize"
                                                    },
                                                    "width": {
                                                        "value": 7
                                                    },
                                                    "y": {
                                                        "value": 0
                                                    },
                                                    "x": {
                                                        "value": -3
                                                    },
                                                    "fill": {
                                                        "value": "transparent"
                                                    }
                                                }
                                            },
                                            "type": "rect",
                                            "name": "right"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '0.9' : '0'"
                                    }
                                },
                                "enter": {
                                    "y": {
                                        "value": 0
                                    },
                                    "x": {
                                        "value": 0
                                    },
                                    "x2": {
                                        "signal": "width"
                                    },
                                    "y2": {
                                        "signal": "histHeight"
                                    },
                                    "fill": {
                                        "value": "white"
                                    }
                                }
                            },
                            "type": "rect",
                            "interactive": false
                        },
                        {
                            "encode": {
                                "update": {
                                    "opacity": {
                                        "signal": "pending ? '1' : '0'"
                                    }
                                },
                                "enter": {
                                    "baseline": {
                                        "value": "middle"
                                    },
                                    "text": {
                                        "value": "Loading View..."
                                    },
                                    "align": {
                                        "value": "center"
                                    },
                                    "fontSize": {
                                        "value": 18
                                    },
                                    "y": {
                                        "signal": "histHeight",
                                        "mult": 0.5
                                    },
                                    "x": {
                                        "signal": "width",
                                        "mult": 0.5
                                    },
                                    "fill": {
                                        "value": "grey"
                                    }
                                }
                            },
                            "type": "text",
                            "interactive": false
                        }
                    ]
                }
            ],
            "$schema": "https://vega.github.io/schema/vega/v4.0.json",
            "data": [
                {
                    "name": "base",
                    "transform": [
                        {
                            "expr": "showBase",
                            "type": "filter"
                        }
                    ]
                },
                {
                    "name": "table"
                },
                {
                    "name": "interesting"
                }
            ]
        }
    }
]